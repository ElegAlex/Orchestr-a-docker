version: '3.8'

# ==========================================
# Orchestr'A - Infrastructure Development
# ==========================================
#
# Services:
# - PostgreSQL 16 (Base de données principale)
# - Redis 7 (Cache et sessions)
# - MinIO (Stockage objets S3-compatible)
#
# Usage:
#   docker-compose up -d         Démarrer tous les services
#   docker-compose down          Arrêter tous les services
#   docker-compose logs -f       Voir les logs en temps réel
#   docker-compose ps            État des services

services:
  # ==========================================
  # PostgreSQL - Base de données
  # ==========================================
  postgres:
    image: postgres:16-alpine
    container_name: orchestr-a-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: orchestra_dev
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: devpassword
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - orchestr-a-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d orchestra_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    labels:
      com.orchestr-a.service: "database"
      com.orchestr-a.description: "PostgreSQL 16 - Base de données principale"

  # ==========================================
  # Redis - Cache et sessions
  # ==========================================
  redis:
    image: redis:7-alpine
    container_name: orchestr-a-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - orchestr-a-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s
    labels:
      com.orchestr-a.service: "cache"
      com.orchestr-a.description: "Redis 7 - Cache et sessions"

  # ==========================================
  # MinIO - Stockage objets S3
  # ==========================================
  minio:
    image: minio/minio:latest
    container_name: orchestr-a-minio-dev
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: devuser
      MINIO_ROOT_PASSWORD: devpassword
    ports:
      - "9000:9000"  # API S3
      - "9001:9001"  # Console Web
    volumes:
      - minio-data:/data
    networks:
      - orchestr-a-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 10s
    labels:
      com.orchestr-a.service: "storage"
      com.orchestr-a.description: "MinIO - Stockage objets S3-compatible"

# ==========================================
# Volumes persistants
# ==========================================
volumes:
  postgres-data:
    name: orchestr-a-postgres-data
    driver: local
    labels:
      com.orchestr-a.volume: "database"
      com.orchestr-a.description: "Données PostgreSQL persistantes"

  redis-data:
    name: orchestr-a-redis-data
    driver: local
    labels:
      com.orchestr-a.volume: "cache"
      com.orchestr-a.description: "Données Redis persistantes"

  minio-data:
    name: orchestr-a-minio-data
    driver: local
    labels:
      com.orchestr-a.volume: "storage"
      com.orchestr-a.description: "Données MinIO persistantes"

# ==========================================
# Réseau dédié
# ==========================================
networks:
  orchestr-a-network:
    name: orchestr-a-dev
    driver: bridge
    labels:
      com.orchestr-a.network: "development"
      com.orchestr-a.description: "Réseau isolé pour l'environnement de développement"
