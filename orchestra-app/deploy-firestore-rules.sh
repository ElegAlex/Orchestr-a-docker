#!/bin/bash

# ========================================================================
# Script de d√©ploiement des r√®gles Firestore S√âCURIS√âES
# Orchestr'A - Mise √† jour: 2025-10-02
# ========================================================================

set -e  # Arr√™t en cas d'erreur

echo "üîí ========================================="
echo "   D√âPLOIEMENT R√àGLES FIRESTORE S√âCURIS√âES"
echo "   Project: orchestr-a-3b48e"
echo "=========================================="
echo ""

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# V√©rification environnement
echo "üìã V√©rification de l'environnement..."
echo ""

# 1. V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "firestore.rules" ]; then
    echo -e "${RED}‚ùå Erreur: firestore.rules introuvable${NC}"
    echo "   Ex√©cutez ce script depuis le r√©pertoire orchestra-app/"
    exit 1
fi

# 2. V√©rifier que les r√®gles ont √©t√© modifi√©es (pas en mode d√©mo)
if grep -q "allow read, write: if true" firestore.rules; then
    echo -e "${RED}‚ùå ATTENTION: Les r√®gles sont encore en mode D√âMO !${NC}"
    echo "   Le fichier contient 'allow read, write: if true'"
    echo ""
    read -p "‚ö†Ô∏è  Voulez-vous vraiment d√©ployer ces r√®gles NON S√âCURIS√âES ? (y/N) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå D√©ploiement annul√©"
        exit 1
    fi
else
    echo -e "${GREEN}‚úÖ R√®gles s√©curis√©es d√©tect√©es${NC}"
fi

# 3. Afficher un r√©sum√© des r√®gles
echo ""
echo "üìä R√©sum√© des r√®gles de s√©curit√©:"
echo ""

# Compter les fonctions RACI
RACI_FUNCTIONS=$(grep -c "function is.*For\|canModifyTask" firestore.rules || echo "0")
echo "   - Fonctions RACI: $RACI_FUNCTIONS"

# Compter les collections s√©curis√©es
COLLECTIONS=$(grep -c "match /.*/{" firestore.rules || echo "0")
echo "   - Collections: $COLLECTIONS"

# V√©rifier support RACI pour tasks
if grep -q "canModifyTask" firestore.rules; then
    echo -e "   - ${GREEN}‚úÖ Support RACI pour tasks activ√©${NC}"
else
    echo -e "   - ${YELLOW}‚ö†Ô∏è  Support RACI pour tasks non d√©tect√©${NC}"
fi

# 4. Backup des r√®gles actuelles en production (optionnel)
echo ""
echo "üíæ Backup des r√®gles actuelles en production..."
BACKUP_FILE="firestore.rules.backup-$(date +%Y%m%d-%H%M%S)"

# Tentative de r√©cup√©ration des r√®gles actuelles (peut √©chouer si non configur√©)
firebase firestore:rules:get --project orchestr-a-3b48e > "$BACKUP_FILE" 2>/dev/null || {
    echo -e "${YELLOW}‚ö†Ô∏è  Impossible de r√©cup√©rer les r√®gles actuelles (normal si premi√®re config)${NC}"
    rm -f "$BACKUP_FILE"
}

# 5. Validation syntax (dry-run)
echo ""
echo "üîç Validation de la syntaxe..."
firebase deploy --only firestore:rules --project orchestr-a-3b48e --dry-run 2>&1 | grep -i "error\|warning" && {
    echo -e "${RED}‚ùå Erreurs de syntaxe d√©tect√©es${NC}"
    exit 1
} || echo -e "${GREEN}‚úÖ Syntaxe valide${NC}"

# 6. Confirmation finale
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  ATTENTION: Cette action va REMPLACER les r√®gles Firestore en production${NC}"
echo ""
echo "Project: orchestr-a-3b48e"
echo "Fichier: firestore.rules ($(wc -l < firestore.rules) lignes)"
echo ""
read -p "üöÄ Confirmer le d√©ploiement ? (y/N) " -n 1 -r
echo

if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå D√©ploiement annul√©"
    exit 0
fi

# 7. D√©ploiement avec credentials
echo ""
echo "üöÄ D√©ploiement en cours..."
echo ""

# Utiliser les vraies credentials comme pour le hosting
export GOOGLE_APPLICATION_CREDENTIALS="./service-account-real.json"
firebase deploy --only firestore:rules --project orchestr-a-3b48e

# 8. R√©sultat
if [ $? -eq 0 ]; then
    echo ""
    echo -e "${GREEN}========================================${NC}"
    echo -e "${GREEN}‚úÖ R√àGLES D√âPLOY√âES AVEC SUCC√àS !${NC}"
    echo -e "${GREEN}========================================${NC}"
    echo ""
    echo "üìå Prochaines √©tapes recommand√©es:"
    echo ""
    echo "   1. Tester l'application avec diff√©rents r√¥les:"
    echo "      - Admin"
    echo "      - Manager"
    echo "      - R√©f√©rent technique"
    echo "      - Utilisateur simple"
    echo ""
    echo "   2. V√©rifier les permissions RACI:"
    echo "      - Cr√©er une t√¢che avec responsible[]"
    echo "      - Tester modification par responsible"
    echo "      - Tester modification par accountable"
    echo ""
    echo "   3. Surveiller les erreurs dans la console Firebase:"
    echo "      https://console.firebase.google.com/project/orchestr-a-3b48e/firestore/rules"
    echo ""

    if [ -f "$BACKUP_FILE" ]; then
        echo "üíæ Backup disponible: $BACKUP_FILE"
        echo ""
    fi
else
    echo ""
    echo -e "${RED}‚ùå √âCHEC DU D√âPLOIEMENT${NC}"
    echo ""
    echo "Consultez les erreurs ci-dessus"
    exit 1
fi
